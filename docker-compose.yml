version: '3.8'

services:
  # Database
  database:
    image: postgres:15-alpine
    container_name: taskmanagement-db
    environment:
      POSTGRES_DB: taskmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/server/src/infrastructure/database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskmanagement-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: taskmanagement-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskmanagement-network

  # Server Application
  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: taskmanagement-server
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/taskmanagement
      - REDIS_URL=redis://redis:6379
      - SERVER_PORT=3001
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - taskmanagement-network

  # Client Application
  client:
    build:
      context: .
      dockerfile: apps/client/Dockerfile
    container_name: taskmanagement-client
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://server:3001
      - NEXT_PUBLIC_WS_URL=ws://server:3001
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    ports:
      - "3000:3000"
    depends_on:
      server:
        condition: service_healthy
    networks:
      - taskmanagement-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  taskmanagement-network:
    driver: bridge