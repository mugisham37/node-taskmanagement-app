version: '3.8'

services:
  # Jaeger Collector
  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.50
    container_name: jaeger-collector
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - ES_USERNAME=${ELASTICSEARCH_USERNAME:-}
      - ES_PASSWORD=${ELASTICSEARCH_PASSWORD:-}
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "14269:14269"  # Admin port
      - "14268:14268"  # HTTP port
      - "14250:14250"  # gRPC port
      - "9411:9411"    # Zipkin port
      - "4317:4317"    # OTLP gRPC port
      - "4318:4318"    # OTLP HTTP port
    depends_on:
      - elasticsearch
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Jaeger Query Service
  jaeger-query:
    image: jaegertracing/jaeger-query:1.50
    container_name: jaeger-query
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - ES_USERNAME=${ELASTICSEARCH_USERNAME:-}
      - ES_PASSWORD=${ELASTICSEARCH_PASSWORD:-}
      - QUERY_BASE_PATH=/jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "16687:16687"  # Admin port
    depends_on:
      - elasticsearch
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Jaeger Agent (optional, for legacy SDKs)
  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.50
    container_name: jaeger-agent
    command:
      - "--reporter.grpc.host-port=jaeger-collector:14250"
      - "--processor.jaeger-compact.server-host-port=0.0.0.0:6831"
      - "--processor.jaeger-binary.server-host-port=0.0.0.0:6832"
      - "--processor.zipkin-compact.server-host-port=0.0.0.0:5775"
    ports:
      - "5775:5775/udp"  # Zipkin compact
      - "6831:6831/udp"  # Jaeger compact
      - "6832:6832/udp"  # Jaeger binary
      - "5778:5778"      # Config server
    depends_on:
      - jaeger-collector
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # OpenTelemetry Collector (alternative to Jaeger Agent)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yml"]
    volumes:
      - ./jaeger-config.yml:/etc/otel-collector-config.yml:ro
    ports:
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
      - "8888:8888"    # Prometheus metrics
      - "8889:8889"    # Span metrics
      - "13133:13133"  # Health check
    depends_on:
      - jaeger-collector
      - prometheus
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Elasticsearch for trace storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch-jaeger
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.monitoring.collection.enabled=true
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Kibana for Elasticsearch management (optional)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.0
    container_name: kibana-jaeger
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_BASEPATH=/kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - monitoring
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  elasticsearch_data:
    driver: local

networks:
  monitoring:
    external: true