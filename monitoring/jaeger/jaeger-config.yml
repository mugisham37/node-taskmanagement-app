extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
        cors:
          allowed_origins:
            - "http://*"
            - "https://*"
  
  jaeger:
    protocols:
      grpc:
        endpoint: 0.0.0.0:14250
      thrift_http:
        endpoint: 0.0.0.0:14268
      thrift_compact:
        endpoint: 0.0.0.0:6831
      thrift_binary:
        endpoint: 0.0.0.0:6832

  zipkin:
    endpoint: 0.0.0.0:9411

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
    send_batch_max_size: 2048
  
  memory_limiter:
    limit_mib: 512
    spike_limit_mib: 128
    check_interval: 5s
  
  resource:
    attributes:
      - key: service.name
        from_attribute: service_name
        action: insert
      - key: service.version
        from_attribute: service_version
        action: insert
      - key: deployment.environment
        value: "${ENVIRONMENT}"
        action: insert

  # Sampling processor for high-volume environments
  probabilistic_sampler:
    sampling_percentage: 10.0

  # Span metrics processor to generate metrics from traces
  spanmetrics:
    metrics_exporter: prometheus
    latency_histogram_buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms, 500ms, 1000ms, 1400ms, 2000ms, 5s, 10s, 20s, 40s, 60s]
    dimensions:
      - name: http.method
        default: GET
      - name: http.status_code
      - name: service.version

exporters:
  # Jaeger exporter for trace storage
  jaeger:
    endpoint: jaeger-collector:14250
    tls:
      insecure: true
  
  # Elasticsearch exporter for trace storage
  elasticsearch:
    endpoints: ["http://elasticsearch:9200"]
    index: jaeger-traces
    mapping:
      mode: "index_template"
    timeout: 30s
    retry_on_failure:
      enabled: true
      initial_interval: 5s
      max_interval: 30s
      max_elapsed_time: 300s
  
  # Prometheus exporter for span metrics
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: jaeger
    const_labels:
      cluster: taskmanagement
  
  # Logging exporter for debugging
  logging:
    loglevel: info
    sampling_initial: 5
    sampling_thereafter: 200

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp, jaeger, zipkin]
      processors: [memory_limiter, resource, batch]
      exporters: [jaeger, elasticsearch, logging]
    
    # Pipeline for generating metrics from traces
    traces/spanmetrics:
      receivers: [otlp, jaeger]
      processors: [memory_limiter, resource, spanmetrics, batch]
      exporters: [prometheus]

  telemetry:
    logs:
      level: "info"
    metrics:
      address: 0.0.0.0:8888
      level: detailed
    traces:
      processors: [batch]