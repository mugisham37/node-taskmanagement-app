global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'taskmanagement'
    environment: '${ENVIRONMENT}'

rule_files:
  - "rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
        - 'node-exporter:9100'
    scrape_interval: 15s
    metrics_path: /metrics

  # Task Management API
  - job_name: 'taskmanagement-api'
    static_configs:
      - targets: 
        - 'taskmanagement-api:3000'
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Task Management Web App
  - job_name: 'taskmanagement-web'
    static_configs:
      - targets: 
        - 'taskmanagement-web:3001'
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # Task Management Admin Dashboard
  - job_name: 'taskmanagement-admin'
    static_configs:
      - targets: 
        - 'taskmanagement-admin:3002'
    scrape_interval: 30s
    metrics_path: /metrics
    scrape_timeout: 10s

  # PostgreSQL Database
  - job_name: 'postgres-exporter'
    static_configs:
      - targets: 
        - 'postgres-exporter:9187'
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis Cache
  - job_name: 'redis-exporter'
    static_configs:
      - targets: 
        - 'redis-exporter:9121'
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx Load Balancer
  - job_name: 'nginx-exporter'
    static_configs:
      - targets: 
        - 'nginx-exporter:9113'
    scrape_interval: 30s
    metrics_path: /metrics

  # Kubernetes API Server (if running on K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes (if running on K8s)
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods (if running on K8s)
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Blackbox Exporter for uptime monitoring
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://taskmanagement.example.com
        - https://admin.taskmanagement.example.com
        - https://api.taskmanagement.example.com/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Jaeger for tracing metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: 
        - 'jaeger:14269'
    scrape_interval: 30s
    metrics_path: /metrics

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: 
        - 'grafana:3000'
    scrape_interval: 30s
    metrics_path: /metrics

  # Custom application metrics
  - job_name: 'custom-metrics'
    static_configs:
      - targets: 
        - 'custom-metrics-exporter:8080'
    scrape_interval: 15s
    metrics_path: /metrics

# Remote write configuration for long-term storage (optional)
# remote_write:
#   - url: "https://prometheus-remote-write.example.com/api/v1/write"
#     basic_auth:
#       username: "${REMOTE_WRITE_USERNAME}"
#       password: "${REMOTE_WRITE_PASSWORD}"

# Remote read configuration (optional)
# remote_read:
#   - url: "https://prometheus-remote-read.example.com/api/v1/read"
#     basic_auth:
#       username: "${REMOTE_READ_USERNAME}"
#       password: "${REMOTE_READ_PASSWORD}"