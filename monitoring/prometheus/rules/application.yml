groups:
  - name: application.rules
    interval: 30s
    rules:
      # API Performance Rules
      - record: taskmanagement:api_request_rate
        expr: sum(rate(http_requests_total{job="taskmanagement-api"}[5m])) by (method, route)

      - record: taskmanagement:api_error_rate
        expr: sum(rate(http_requests_total{job="taskmanagement-api",status_code!~"2.."}[5m])) / sum(rate(http_requests_total{job="taskmanagement-api"}[5m]))

      - record: taskmanagement:api_response_time_p95
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job="taskmanagement-api"}[5m])) by (le, method, route))

      - record: taskmanagement:api_response_time_p50
        expr: histogram_quantile(0.50, sum(rate(http_request_duration_seconds_bucket{job="taskmanagement-api"}[5m])) by (le, method, route))

      # Database Performance Rules
      - record: taskmanagement:db_connection_usage
        expr: sum(pg_stat_database_numbackends) / sum(pg_settings_max_connections) * 100

      - record: taskmanagement:db_query_duration_p95
        expr: histogram_quantile(0.95, sum(rate(pg_stat_statements_mean_time_bucket[5m])) by (le))

      - record: taskmanagement:db_active_queries
        expr: sum(pg_stat_activity_count{state="active"})

      # Cache Performance Rules
      - record: taskmanagement:redis_hit_rate
        expr: sum(rate(redis_keyspace_hits_total[5m])) / (sum(rate(redis_keyspace_hits_total[5m])) + sum(rate(redis_keyspace_misses_total[5m]))) * 100

      - record: taskmanagement:redis_memory_usage
        expr: sum(redis_memory_used_bytes) / sum(redis_memory_max_bytes) * 100

      # Business Metrics Rules
      - record: taskmanagement:active_users_5m
        expr: count(increase(user_activity_total[5m]) > 0)

      - record: taskmanagement:tasks_created_rate
        expr: sum(rate(tasks_created_total[5m]))

      - record: taskmanagement:tasks_completed_rate
        expr: sum(rate(tasks_completed_total[5m]))

      - record: taskmanagement:task_completion_ratio
        expr: sum(rate(tasks_completed_total[24h])) / sum(rate(tasks_created_total[24h]))

      # System Resource Rules
      - record: taskmanagement:cpu_usage_avg
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      - record: taskmanagement:memory_usage_percent
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100

      - record: taskmanagement:disk_usage_percent
        expr: 100 - ((node_filesystem_avail_bytes{mountpoint="/"} * 100) / node_filesystem_size_bytes{mountpoint="/"})

      # WebSocket Connection Rules
      - record: taskmanagement:websocket_connections_active
        expr: sum(websocket_connections_active{job="taskmanagement-api"})

      - record: taskmanagement:websocket_messages_rate
        expr: sum(rate(websocket_messages_total{job="taskmanagement-api"}[5m]))

      # Authentication Rules
      - record: taskmanagement:login_success_rate
        expr: sum(rate(auth_login_attempts_total{result="success"}[5m])) / sum(rate(auth_login_attempts_total[5m])) * 100

      - record: taskmanagement:failed_login_rate
        expr: sum(rate(auth_login_attempts_total{result="failure"}[5m]))

      # Feature Usage Rules
      - record: taskmanagement:feature_usage_rate
        expr: sum(rate(feature_usage_total[5m])) by (feature_name)

      - record: taskmanagement:api_endpoint_usage
        expr: sum(rate(http_requests_total{job="taskmanagement-api"}[5m])) by (route)

  - name: application.alerts
    rules:
      # High Error Rate Alert
      - alert: HighAPIErrorRate
        expr: taskmanagement:api_error_rate > 0.05
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High API error rate detected"
          description: "API error rate is {{ $value | humanizePercentage }} for the last 5 minutes"

      # High Response Time Alert
      - alert: HighAPIResponseTime
        expr: taskmanagement:api_response_time_p95 > 2
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "High API response time detected"
          description: "95th percentile response time is {{ $value }}s for the last 5 minutes"

      # Database Connection Pool Alert
      - alert: HighDatabaseConnectionUsage
        expr: taskmanagement:db_connection_usage > 80
        for: 5m
        labels:
          severity: warning
          service: database
        annotations:
          summary: "High database connection usage"
          description: "Database connection usage is {{ $value | humanizePercentage }}"

      # Redis Memory Usage Alert
      - alert: HighRedisMemoryUsage
        expr: taskmanagement:redis_memory_usage > 85
        for: 5m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "High Redis memory usage"
          description: "Redis memory usage is {{ $value | humanizePercentage }}"

      # Low Cache Hit Rate Alert
      - alert: LowCacheHitRate
        expr: taskmanagement:redis_hit_rate < 80
        for: 10m
        labels:
          severity: warning
          service: cache
        annotations:
          summary: "Low cache hit rate"
          description: "Cache hit rate is {{ $value | humanizePercentage }}"

      # High Failed Login Rate Alert
      - alert: HighFailedLoginRate
        expr: taskmanagement:failed_login_rate > 10
        for: 5m
        labels:
          severity: critical
          service: auth
        annotations:
          summary: "High failed login rate detected"
          description: "Failed login rate is {{ $value }} attempts per second"

      # System Resource Alerts
      - alert: HighCPUUsage
        expr: taskmanagement:cpu_usage_avg > 80
        for: 10m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High CPU usage detected"
          description: "CPU usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: HighMemoryUsage
        expr: taskmanagement:memory_usage_percent > 85
        for: 5m
        labels:
          severity: warning
          service: system
        annotations:
          summary: "High memory usage detected"
          description: "Memory usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      - alert: HighDiskUsage
        expr: taskmanagement:disk_usage_percent > 90
        for: 5m
        labels:
          severity: critical
          service: system
        annotations:
          summary: "High disk usage detected"
          description: "Disk usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      # Business Metric Alerts
      - alert: LowTaskCompletionRate
        expr: taskmanagement:task_completion_ratio < 0.5
        for: 1h
        labels:
          severity: warning
          service: business
        annotations:
          summary: "Low task completion rate"
          description: "Task completion rate is {{ $value | humanizePercentage }} over the last 24 hours"

      # Service Availability Alerts
      - alert: ServiceDown
        expr: up{job=~"taskmanagement-.*"} == 0
        for: 1m
        labels:
          severity: critical
          service: "{{ $labels.job }}"
        annotations:
          summary: "Service is down"
          description: "{{ $labels.job }} service is down on {{ $labels.instance }}"